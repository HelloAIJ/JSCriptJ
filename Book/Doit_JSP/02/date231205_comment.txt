1. consol
2. prompt() 함수
 : 프롬프트 창은 사용자가 간단한 값을 입력할 수 있는 창을 표시하며, 
 프로그램 실행에 필요한 값을 받을 때 자주 사용된다. 기본 값 미지정 시 텍스트 필드는 빈 상태로 표시된다. 
  ex_ prompt(내용)or prompt(내용, 기본값)
3. 사용성, usability, 사용자가 편히 쓸 수 있게 하는 노력이 필요하나. 모든 경우의 수를 대처할 수 없으므로,
   제공자는 사용자가 선택을 제한당한다는 느낌없이 제공자의 선택지(감당가능범위)를 고르도록 유도해야 한다.
   무엇보다도 사용자에게 제공되는 서비스에 대한 선택 제한이 드러나지 않게 함을 넘어서서 
   서비스 사용자가 주체적으로 통제한다는 인식을 주는 것이 중요하다. 이에 대한 인사이트 및 비져닝은 시간과 노력에 비례함
4. 마크업(html) 작업 시, 지금은 틀이 고정되어 있는 상태로 포트폴리오 및 작업물을 만들고 있으나, 
   후에는 비워두는 쪽을 생각해야 하며, 사용자와의 인터렉션을 드러내야 한다.
5. 변수
 ① 변수 이름은 숫자로 시작할 수 없으며, 이름 안에 공백이 포함되어 있으면 안됨
 ② 자바스크립트는 영문자의 대소문자 구별함
 ③ 한단어로 이루어진 변수 사용 시 주로 소문자 사용
 ④ 두 단어 이상으로 이루어진 변수의 경우 언더바(_)로 연결하는 스네이크 표기법이나 
    중간에 대문자를 섞어 사용하는 카멜 표기법을 사용함
 ⑤ 자바스크립트에서 미리 정해 놓은 예약어(ex_let 등)는 변수 이름으로 사용할 수 없음
 ⑥ 무의미한 변수 이름은 피할 것. 시맨틱(의미있는)한 명명
6. 변수 선언 및 할당
 ① let(재선언X/재할당O) / const(재선언X/재할당X) 다음에 변수 이름을 적어 '변수선언' 
   / 단, var는 다 됨(유연한 적용, 길어지면 유효성 검증 안됨) 
   ex_let apple='사과(변수선언)' → let apple='능금'(재선언, 불가) → apple='능금'(재할당, 가능)
 ② 예약어(let, const, var(오류가 많아서 es6에서 제외됨. 사용지양) 등) + 변수명 = 값 또는 식
 ③ 변수 선언과 값 할당을 동시에 할 수 있음
7. 변수 선언은 값 또는 수식의 반복 사용 시 의미를 가진다. 한번에 값 또는 수식 변경으로 전 영역에 대한 수정이 가능해짐  
8. 재선언이란 변수 재사용, 재할당이란 변수값 변경
9. 자료형 데이터 타입 : 자바스크립트의 자료형은 원시형(primitive type)과 객체(object)형으로 나뉨
10. typeof() 함수 : typeof(값 또는 변수)
11. UI 제작 시 고려해야할 부분
 ① 사용자가 올바르게 입력했을 경우
 ②-1 사용자(또라이)가 의도적으로 이상한 답을 입력했을 경우
 ②-2 사용자가 다른 데이터 형태로 입력 했을 경우
 ③ 사용자가 아무것도 입력하지 않고 다음을 눌렀을 경우
 ④ 취소를 눌렀을 때, null값
12. undefined vs null(둘 다 JS 기본 자료형)
 ① undefined: 값을 할당하지 않았을 때의 기본값. 선언만 하고 할당하지 않았음을 말하며 주로 사용자의 실수에 의해 발생
 ② null: 유효하지 않은 값으로 주로 사용자가 의도적으로 null을 할당함
13. 배열(array)
 ① 하나의 변수에 여러 값을 할당할 수 있는 형태로 배열명 = [ 값1, 값2, 값3, …] 과 같이 표현된다. 
    대괄호로 
 ⑤ 0부터 카운팅
